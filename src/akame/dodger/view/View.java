/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package akame.dodger.view;

import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.awt.image.BufferedImageOp;
import java.awt.image.ConvolveOp;
import java.awt.image.Kernel;
import java.util.ArrayList;
import java.util.Random;

import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JToggleButton;

import akame.dodger.model.CharSmash;

/**
 *
 * @author Dodger
 */
public class View extends javax.swing.JFrame {

	/**
	 * Creates new form View
	 */
	public View() {
		initComponents();

		act = new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				for (CharSmash character : controller1.getRoster())
					if (character.getName().equals(e.getActionCommand())) {
						character.setChecked(!character.isChecked());
						if (!character.isChecked()) {

							tintToogle((JToggleButton) e.getSource());
							// Kernel k = new Kernel(3, 3, new float[] { .1111f,
							// .1111f, .1111f, .1111f, .1111f, .1111f,
							// .1111f, .1111f, .1111f });
							// ConvolveOp op2 = new ConvolveOp(k);
							//
							// BufferedImage bimage = new BufferedImage(
							// ((JToggleButton)
							// e.getSource()).getIcon().getIconWidth(),
							// ((JToggleButton)
							// e.getSource()).getIcon().getIconHeight(),
							// BufferedImage.TYPE_4BYTE_ABGR);
							//
							// Graphics2D bGr = bimage.createGraphics();
							// bGr.drawImage(((ImageIcon) ((JToggleButton)
							// e.getSource()).getIcon()).getImage(), 0, 0,
							// null);
							// bGr.dispose();
							//
							// Graphics2D graphics = bimage.createGraphics();
							// graphics.drawImage(((ImageIcon) ((JToggleButton)
							// e.getSource()).getIcon()).getImage(), 0, 0,
							// null);
							// Color newColor = new Color(50, 50, 175, 0);
							// graphics.setXORMode(newColor);
							// graphics.drawImage(bimage, null, 0, 0);
							// graphics.dispose();
							//
							// ((JToggleButton) e.getSource()).setIcon(new
							// ImageIcon(bimage));
						} else {
							((JToggleButton) e.getSource()).setIcon(new ImageIcon(getClass()
									.getResource("/akame/dodger/rsc/icons/chr_00_" + character.getName() + "_01.png")));
						}

						try {
							controller1.writeSave();
						} catch (Exception e1) {
							JOptionPane.showMessageDialog(rootPane, "A problem occured with the file save.txt.");
							e1.printStackTrace();
							// TODO Faire un log d'erreur
						}

						return;
					}
			}
		};

		bayonetta.addActionListener(act);
		captain.addActionListener(act);
		cloud.addActionListener(act);
		dedede.addActionListener(act);

	}

	public void tintToogle(JToggleButton e) {
		Kernel k = new Kernel(3, 3,
				new float[] { .1111f, .1111f, .1111f, .1111f, .1111f, .1111f, .1111f, .1111f, .1111f });
		ConvolveOp op2 = new ConvolveOp(k);

		BufferedImage bimage = new BufferedImage(e.getIcon().getIconWidth(), e.getIcon().getIconHeight(),
				BufferedImage.TYPE_4BYTE_ABGR);

		Graphics2D bGr = bimage.createGraphics();
		bGr.drawImage(((ImageIcon) e.getIcon()).getImage(), 0, 0, null);
		bGr.dispose();

		Graphics2D graphics = bimage.createGraphics();
		graphics.drawImage(((ImageIcon) e.getIcon()).getImage(), 0, 0, null);
		Color newColor = new Color(50, 50, 175, 0);
		graphics.setXORMode(newColor);
		graphics.drawImage(bimage, null, 0, 0);
		graphics.dispose();

		e.setIcon(new ImageIcon(bimage));
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */

	// TODO g√©rer erreur & nombre boucle pour buttonGroup
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// <editor-fold defaultstate="collapsed" desc="Generated
	// <editor-fold defaultstate="collapsed" desc="Generated
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		try {
			controller1 = new akame.dodger.controller.Controller();
		} catch (Exception e1) {
			e1.printStackTrace();
		}
		buttonGroup1 = new javax.swing.ButtonGroup();
		result = new javax.swing.JLabel();
		draw = new javax.swing.JButton();
		bayonetta = new javax.swing.JToggleButton();
		captain = new javax.swing.JToggleButton();
		cloud = new javax.swing.JToggleButton();
		dedede = new javax.swing.JToggleButton();
		jMenuBar1 = new javax.swing.JMenuBar();
		jMenu1 = new javax.swing.JMenu();
		openFile = new javax.swing.JMenuItem();
		saveFile = new javax.swing.JMenuItem();
		jSeparator1 = new javax.swing.JPopupMenu.Separator();
		quit = new javax.swing.JMenuItem();
		jMenu2 = new javax.swing.JMenu();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		setTitle("Smash Randomizer");

		draw.setText("Draw a character");
		draw.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				drawActionPerformed(evt);
			}
		});

		bayonetta.setIcon(
				new javax.swing.ImageIcon(getClass().getResource("/akame/dodger/rsc/icons/chr_00_bayonetta_01.png"))); // NOI18N
		bayonetta.setAlignmentY(0.0F);
		bayonetta.setMargin(new java.awt.Insets(0, 0, 0, 0));
		bayonetta.setName("bayonetta"); // NOI18N
		bayonetta.setActionCommand("bayonetta");
		isToggle("bayonetta", bayonetta);
	

		captain.setIcon(
				new javax.swing.ImageIcon(getClass().getResource("/akame/dodger/rsc/icons/chr_00_captain_01.png"))); // NOI18N
		captain.setAlignmentY(0.0F);
		captain.setMargin(new java.awt.Insets(0, 0, 0, 0));
		captain.setName("bayonetta"); // NOI18N
		captain.setActionCommand("captain");
		isToggle("captain", captain);

		cloud.setIcon(new javax.swing.ImageIcon(getClass().getResource("/akame/dodger/rsc/icons/chr_00_cloud_01.png"))); // NOI18N
		cloud.setAlignmentY(0.0F);
		cloud.setMargin(new java.awt.Insets(0, 0, 0, 0));
		cloud.setName("bayonetta"); // NOI18N
		cloud.setActionCommand("cloud");
		isToggle("cloud", cloud);

		dedede.setIcon(
				new javax.swing.ImageIcon(getClass().getResource("/akame/dodger/rsc/icons/chr_00_dedede_01.png"))); // NOI18N
		dedede.setAlignmentY(0.0F);
		dedede.setMargin(new java.awt.Insets(0, 0, 0, 0));
		dedede.setName("bayonetta"); // NOI18N
		dedede.setActionCommand("dedede");
		isToggle("dedede",dedede);

		jMenu1.setText("File");

		openFile.setText("Open File");
		openFile.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				openFileActionPerformed(evt);
			}
		});
		jMenu1.add(openFile);

		saveFile.setText("Save  File");
		saveFile.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				saveFileActionPerformed(evt);
			}
		});
		jMenu1.add(saveFile);
		jMenu1.add(jSeparator1);

		quit.setText("Quit");
		quit.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				quitActionPerformed(evt);
			}
		});
		jMenu1.add(quit);

		jMenuBar1.add(jMenu1);

		jMenu2.setText("Presets");
		jMenuBar1.add(jMenu2);

		setJMenuBar(jMenuBar1);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup().addContainerGap()
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(layout.createSequentialGroup()
										.addComponent(bayonetta, javax.swing.GroupLayout.PREFERRED_SIZE, 117,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(captain, javax.swing.GroupLayout.PREFERRED_SIZE, 117,
												javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGroup(layout.createSequentialGroup()
										.addComponent(cloud, javax.swing.GroupLayout.PREFERRED_SIZE, 117,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(dedede, javax.swing.GroupLayout.PREFERRED_SIZE, 117,
												javax.swing.GroupLayout.PREFERRED_SIZE)))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
								javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addComponent(result, javax.swing.GroupLayout.PREFERRED_SIZE, 366,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addContainerGap())
				.addGroup(layout.createSequentialGroup().addGap(141, 141, 141).addComponent(draw).addGap(0, 699,
						Short.MAX_VALUE)));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(result, javax.swing.GroupLayout.PREFERRED_SIZE, 379,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGroup(layout.createSequentialGroup()
										.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(bayonetta).addComponent(captain))
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(dedede).addComponent(cloud))))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
								javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addComponent(draw).addGap(21, 21, 21)));

		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void openFileActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_openFileActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_openFileActionPerformed

	private void quitActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_quitActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_quitActionPerformed

	private void saveFileActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_saveFileActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_saveFileActionPerformed

	private void actionButtonGroupListener(ActionEvent ae) {

	}
	
	private void isToggle(String character, JToggleButton button){
		if (!controller1.getRoster().get(controller1.getCharacter(character)).isChecked())
			tintToogle(button);
	}

	private void drawActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_drawActionPerformed
		ArrayList<CharSmash> activeChar = new ArrayList<CharSmash>();
		for (CharSmash character : controller1.getRoster())
			if (character.isChecked())
				activeChar.add(character);

		try {
			Random rand = new Random();
			String name = activeChar.get(rand.nextInt(activeChar.size())).getName();

			result.setIcon(
					new ImageIcon(getClass().getResource("/akame/dodger/rsc/portraits/chr_13_" + name + "_01.png")));
		} catch (Exception e) {
			// TODO Auto-generated catch block
			JOptionPane.showMessageDialog(rootPane, "Your selection is empty, please select at least one character");
		}

	}// GEN-LAST:event_drawActionPerformed

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed" desc=" Look and feel setting
		// code (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the
		 * default look and feel. For details see
		 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.
		 * html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		// </editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new View().setVisible(true);
			}
		});
	}

	private ActionListener act;
	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JToggleButton bayonetta;
	private javax.swing.ButtonGroup buttonGroup1;
	private javax.swing.JToggleButton captain;
	private javax.swing.JToggleButton cloud;
	private akame.dodger.controller.Controller controller1;
	private javax.swing.JToggleButton dedede;
	private javax.swing.JButton draw;
	private javax.swing.JMenu jMenu1;
	private javax.swing.JMenu jMenu2;
	private javax.swing.JMenuBar jMenuBar1;
	private javax.swing.JPopupMenu.Separator jSeparator1;
	private javax.swing.JMenuItem openFile;
	private javax.swing.JMenuItem quit;
	private javax.swing.JLabel result;
	private javax.swing.JMenuItem saveFile;
	// End of variables declaration//GEN-END:variables
}